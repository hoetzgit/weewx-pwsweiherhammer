#errorCatcher Echo
#encoding UTF-8
#set $observations = $to_list(['outTemp', 'dewpoint', 'heatindex', 'windchill', 'barometer', 'outHumidity', 'outHumAbs', 'windSpeed', 'windGust', 'windDir', 'rainRate', 'inTemp', 'inHumidity'])
#set $timespans = $to_list(['current', 'day', 'week', 'month', 'year'])
#set $lobs = $len($observations)
#set $lts = $len($timespans)
#set $lobsii = 0
#set $ltsii = 0
{
    "station": {
        "location": "$station.location",
        "latitude": $station.stn_info.latitude_f,
        "longitude": $station.stn_info.longitude_f,
        "altitude (meters)": $station.altitude.meter.raw,
        "link": "$station.station_url",
        "hardware": "$station.hardware",
        "serveruptime": "$station.os_uptime",
        "weewxuptime": "$station.uptime"
    },
    "generation": {
        "time": "$current.dateTime.format("%a, %d %b %Y %H:%M:%S %Z")",
        "generator": "weewx $station.version"
    },
    "sunshine": {
        "rawSunshineDur": "$day.sunshineDur.sum.raw",
        "daySunshineDur": "$day.sunshineDur.sum.format('%(hour)d%(hour_label)s, %(minute)d%(minute_label)s, %(second)d%(second_label)s')",
        "currentSunshine": "$current.sunshine",
        "rawSunshine": "$current.sunshine.raw",
        "formattedSunshine": "$current.sunshine.formatted"
    },
    "test": {
        "outHumAbs": "$current.outHumAbs.gram_per_meter_cubed",
        "lastRain": "$last_rain",
        "timeSinceLastRain": "$time_since_last_rain",
        "GTSdate" : $day.GTSdate.last.format("%d.%m.%Y")
    },
    "trend": {
        "outTemp": "$trend.outTemp",
        "barometer": "$trend.barometer",
        "rawBarometer": "$trend.barometer.raw",
        "formattedBarometer": "$trend.barometer.formatted",
        "asky_box_temperature": "$trend.asky_box_temperature",
        "asky_box_barometer": "$trend.asky_box_barometer",
        "solar_temperature": "$trend.solar_temperature",
        "solar_barometer": "$trend.solar_barometer"
    },
    "batt": {
        "wh65_batt": "$current.wh65_batt",
        "raw_wh65_batt": "$current.wh65_batt.raw",
        "formatted_wh65_batt": "$current.wh65_batt.formatted"
    },
    #for $ts in $timespans
    #set $ltsii += 1
    #set $lobsii = 0
    "$ts":{
        #for $x in $observations
        #if $getVar('%s.%s.has_data' % ($ts,$x))
        #set $lobsii += 1
        "$x": {
            #if $ts == 'current'
            "value": "$getVar($ts + '.' + $x + '.formatted')",
            "unit": "$getVar($ts + '.' + $x).format(" ").lstrip()",
            #else
            "min": "$getVar($ts + '.' + $x + '.min.formatted')",
            "min_ts": "$getVar($ts + '.' + $x + '.mintime')",
            "max": "$getVar($ts + '.' + $x + '.max.formatted')",
            "max_ts": "$getVar($ts + '.' + $x + '.maxtime')",
            "avg": "$getVar($ts + '.' + $x + '.avg.formatted')",
            "unit": "$getVar($ts + '.' + $x + '.min').format(" ").lstrip()",
            #end if
        #if $lobsii < $lobs
        },
        #else
        }
        #end if
        #end if
        #end for
    #if $ltsii < $lts
    },
    #else
    }
    #end if
    #end for
}