#encoding UTF-8
#import datetime
#errorCatcher Echo
## If extended almanac information is available, do extra calculations.
#if $almanac.hasExtras
  #import locale
  #set $sun_azimuth = locale.format_string( "%.1f&deg;", $almanac.sun.az )
  #set $sun_ra = locale.format_string( "%.1f&deg;", $almanac.sun.ra )
  #set $sun_dec = locale.format_string( "%.1f&deg;", $almanac.sun.dec )
  #set $moon_azimuth = locale.format_string( "%.1f&deg;", $almanac.moon.az )
  #set $moon_altitude = locale.format_string( "%.1f&deg;", $almanac.moon.alt )
  #set $moon_ra = locale.format_string( "%.1f&deg;", $almanac.moon.ra )
  #set $moon_dec = locale.format_string( "%.1f&deg;", $almanac.moon.dec )
  #set $sun_altitude = $almanac.sun.alt
  #if $sun_altitude < 0
    #set $sun_None="<i>(%s)</i>" % $obs.label.sun_always_down
    #set $daylight_str = "00:00"
  #else
    #set $sun_None="<i>(%s)</i>" % $obs.label.sun_always_up
    #set $daylight_str = "24:00"
  #end if
  #set $sunrise_ts = $almanac.sun.rise.raw
  #set $sunset_ts = $almanac.sun.set.raw
  #if $sunrise_ts and $sunset_ts
    #set $now = $current.dateTime.raw
    #set $today_daylight = $sunset_ts -  $sunrise_ts
    #set $seconds = $today_daylight
    #set $hours = $seconds // 3600
    #set $seconds %= 3600
    #set $minutes = $seconds // 60
    #set $seconds %= 60
    #set $daylight_str = "%d %s, %d %s, %d %s" % ($hours, $obs.label.hour[0] if ( $hours == 1 ) else $obs.label.hour[1], $minutes, $obs.label.minute[0] if ( $minutes == 1 ) else $obs.label.minute[1], $seconds, $obs.label.second[0] if ( $seconds == 1 ) else $obs.label.second[1])
    #set $yesterday = $now - 24*3600
    #set $yesterday_daylight = $almanac($almanac_time=$yesterday).sun.set.raw - $almanac($almanac_time=$yesterday).sun.rise.raw
    #set $difference = $today_daylight - $yesterday_daylight
    #if $difference
      #set $delta = abs($difference)
      #set $minute_difference = (int($delta) // 60)
      #set $minutes_text = $obs.label.minute[0] if ( $minute_difference == 1 ) else $obs.label.minute[1]
      #set $seconds_text = $obs.label.second[0] if ( int($delta) == 1 ) else $obs.label.second[1]
      #set $amt_str = "%s%d %s" % (str(int($delta) // 60) + ' ' + $minutes_text + ', ' if ($delta // 60) > 0 else '', $delta % 60 if ($delta // 60) > 0 else $delta, $seconds_text)
      #if $difference > 0
        #set $delta_str = "%s %s" % ( $amt_str, $obs.label.more_than_yesterday )
      #else
        #set $delta_str = "%s %s" % ( $amt_str, $obs.label.less_than_yesterday )
      #end if
      #set $daylight_str = "%s<br/>%s" % ($daylight_str, $delta_str)
    #end if
  #end if
  #set $sun_altitude = locale.format_string( "%.1f&deg;", $almanac.sun.alt )  
#end if
{
    "site": "$station.location",
    "station_url": "$station.station_url",
    "version": "$station.version",
    "weiherhammer_version": "$weiherhammer_version",
    "weewxuptime": "$station.uptime.long_form",
    "serveruptime": "$station.os_uptime.long_form",
    "serverLocale": "$system_locale",
    "serverLocaleJS": "$system_locale_js",
    "localeEncoding": "$locale_encoding",
    "station": {
        "hardware": "$station.hardware",
        "location": "$station.location",
        "latitude": "$station.latitude[1]' $station.latitude[2]",
        "longitude": "$station.longitude[1]' $station.longitude[2]",
        "latitude_dd": "$station.stn_info.latitude_f",
        "longitude_dd": "$station.stn_info.longitude_f",
        "altitude": "$station.altitude",
        "archive_interval": "#echo $archive_interval_ms / 1000 #",
        "archive_interval_ms": "$archive_interval_ms"
    },
    "extras": {
        "forecast_show_conditions": "$Extras.forecast_show_conditions",
        "forecast_show_conditions_console": "$Extras.forecast_show_conditions_console",
        "forecast_show_dewpoint": "$Extras.forecast_show_dewpoint",
        "forecast_show_dewpoint_console": "$Extras.forecast_show_dewpoint_console",
        "forecast_show_humidity": "$Extras.forecast_show_humidity",
        "forecast_show_humidity_console": "$Extras.forecast_show_humidity_console",
        "forecast_show_pop": "$Extras.forecast_show_pop",
        "forecast_show_pop_console": "$Extras.forecast_show_pop_console",
        "forecast_show_pressure": "$Extras.forecast_show_pressure",
        "forecast_show_pressure_console": "$Extras.forecast_show_pressure_console",
        "forecast_show_temperature": "$Extras.forecast_show_temperature",
        "forecast_show_temperature_console": "$Extras.forecast_show_temperature_console",
        "forecast_show_winddirdeg": "$Extras.forecast_show_winddirdeg",
        "forecast_show_winddirdeg_console": "$Extras.forecast_show_winddirdeg_console",
        "forecast_show_windspeed": "$Extras.forecast_show_windspeed",
        "forecast_show_windspeed_console": "$Extras.forecast_show_windspeed_console",
        "highcharts_decimal": "$Extras.highcharts_decimal",
        "highcharts_homepage_graphgroup": "$Extras.highcharts_homepage_graphgroup",
        "highcharts_thousands": "$Extras.highcharts_thousands",
        "reload_hook_images": "$Extras.reload_hook_images",
        "reload_images_hook_ac": "$Extras.reload_images_hook_ac",
        "reload_images_hook_af": "$Extras.reload_images_hook_af",
        "reload_images_hook_as": "$Extras.reload_images_hook_as",
        "reload_images_hook_asi": "$Extras.reload_images_hook_asi",
        "reload_images_radar": "$Extras.reload_images_radar",
        "theme_toggle_enabled": "$Extras.theme_toggle_enabled",
        "weiherhammer_locale": "$Extras.weiherhammer_locale",
        "weiherhammer_theme": "$Extras.theme",
        "console_theme": "$Extras.console_theme"
    },
    "forecast": {
        "alerts_provider": "$alerts_provider",
        "alerts_provider_list": "$alerts_provider_list",
        "alerts_provider_toggle": "$alerts_provider_toggle",
        "aqi_provider": "$aqi_provider",
        "aqi_provider_list": "$aqi_provider_list",
        "aqi_provider_toggle": "$aqi_provider_toggle",
        "current_provider": "$current_provider",
        "current_provider_list": "$current_provider_list",
        "current_provider_toggle": "$current_provider_toggle",
        "current_obs_icon": "$current_obs_icon",
        "current_obs_summary": "$current_obs_summary",
        "current_obs_source": "$current_obs_source",
        "forecast_provider": "$forecast_provider",
        "forecast_provider_list": "$forecast_provider_list",
        "forecast_provider_toggle": "$forecast_provider_toggle",
        "builtin_forecast_file": "$builtin_forecast_file",
        "builtin_forecast_available": "$builtin_forecast_available",
        "external_forecast_file": "$external_forecast_file",
        "external_forecast_available": "$external_forecast_available"
    },
    "earthquake": {
        "time": "$earthquake_time",
        "place": "$earthquake_place",
        "latitude": "$earthquake_lat",
        "longitude": "$earthquake_lon",
        "magnitude": "$earthquake_magnitude",
        "url": "$earthquake_url",
        "distance_away": "$earthquake_distance_away",
        "distance_label": "$earthquake_distance_label",
        "bearing": "$earthquake_bearing",
        "bearing_raw": "$earthquake_bearing_raw"
    },
    "unit_rounding": $all_obs_rounding_json,
    "unit_label": $all_obs_unit_labels_json,
    "unit_group": $all_obs_unit_groups_json,
    "current": {
        "appTemp": "$current.appTemp",
        "barometer": "$current.barometer",
        "barometer_formatted": "$current.barometer.formatted",
        "barometer_trend": "$trend.barometer",
        "barometer_trend_formatted": "$trend.barometer.formatted",
        "cloudbase": "$current.cloudbase",
        #if $cloudcover == "N/A" or $cloudcover is None
        "cloudcover": "N/A",
        #else
        "cloudcover": "$cloudcover$cloudcover_unit",
        #end if
        "dateTime": "$current.dateTime",
        "dateTime_raw": "$current.dateTime.raw",
        "dewpoint": "$current.dewpoint",
        "epoch": "#echo int( time.time() )#",
        "ET": "$current.ET",
        "extraHumid1": "$current.extraHumid1",
        "extraHumid2": "$current.extraHumid2",
        "extraHumid3": "$current.extraHumid3",
        "extraTemp1": "$current.extraTemp1",
        "extraTemp2": "$current.extraTemp2",
        "extraTemp3": "$current.extraTemp3",
        "heatindex": "$current.heatindex",
        "inHumidity": "$current.inHumidity",
        "inHumidity_formatted": "$current.inHumidity.formatted",
        "inTemp": "$current.inTemp",
        "inTemp_formatted": "$current.inTemp.formatted",
        "luminosity": "$current.luminosity",
        "outHumAbs": "$current.outHumAbs.gram_per_meter_cubed",
        "outHumidity": "$current.outHumidity",
        "outTemp": "$current.outTemp",
        "outTemp_formatted": "$current.outTemp.formatted",
        "pressure": "$current.pressure",
        "radiation": "$current.radiation",
        "rain": "$current.rain",
        "rainRate": "$current.rainRate",
        "airrohr_pm10_0": "$current.airrohr_pm10_0",
        "airrohr_pm2_5": "$current.airrohr_pm2_5",
        "thswIndex": "$current.thswIndex",
        "thwIndex": "$current.thwIndex",
        "uba_no2": "$current.uba_no2",
        "uba_o3": "$current.uba_o3",
        "UV": "$current.UV",
        #if $visibility == "N/A" or $visibility is None
        "visibility": "N/A",
        #else
        "visibility": "$visibility $visibility_unit",
        #end if
        "wetBulb": "$current.wetBulb",
        "windchill": "$current.windchill",
        "windDir": "$current.windDir",
        "windDir_formatted": "$current.windDir.formatted",
        "windDirCompass": "$current.windDir.ordinal_compass",
        "windGust": "$current.windGust",
        "windGust_formatted": "$current.windGust.formatted",
        "windGustDir": "$current.windGustDir",
        "windrun": "$current.windrun",
        "windSpeed": "$current.windSpeed"
    },
    "raw": $current_obs_raw_json,
    "day": {
        "outTemp": {
            "max": "$day.outTemp.max",
            "max_formatted": "$day.outTemp.max.formatted",
            "maxtime": "$day.outTemp.maxtime",
            "min": "$day.outTemp.min",
            "min_formatted": "$day.outTemp.min.formatted",
            "mintime": "$day.outTemp.mintime",
            "avg": "$day.outTemp.avg",
            "avg_formatted": "$day.outTemp.avg.formatted"
        },
        "appTemp": {
            "max": "$day.appTemp.max",
            "maxtime": "$day.appTemp.maxtime",
            "min": "$day.appTemp.min",
            "mintime": "$day.appTemp.mintime"
        },
        "heatindex": {
            "max": "$day.heatindex.max",
            "maxtime": "$day.heatindex.maxtime"
        },
        "windchill": {
            "max": "$day.windchill.min",
            "maxtime": "$day.windchill.mintime"
        },
        "humidity": {
            "max": "$day.outHumidity.max",
            "maxtime": "$day.outHumidity.maxtime",
            "min": "$day.outHumidity.min",
            "mintime": "$day.outHumidity.mintime"
        },
        "dewpoint": {
            "max": "$day.dewpoint.max",
            "maxtime": "$day.dewpoint.maxtime",
            "min": "$day.dewpoint.min",
            "mintime": "$day.dewpoint.mintime"
        },
        "barometer": {
            "max": "$day.barometer.max",
            "maxtime": "$day.barometer.maxtime",
            "min": "$day.barometer.min",
            "mintime": "$day.barometer.mintime"
        },
        "wind": {
            "max": "$day.wind.max",
            "max_formatted": "$day.wind.max.formatted",
            "maxtime": "$day.wind.maxtime",
            "gustdir": "$day.wind.gustdir",
            "average": "$day.wind.avg",
            "vectordir": "$day.wind.vecdir",
            "vectoravg": "$day.wind.vecavg",
            "windrun_max": "$day.windrun.max",
            "windrun_maxtime": "$day.windrun.maxtime",
            "windrun_min": "$day.windrun.min",
            "windrun_mintime": "$day.windrun.mintime",
            "windrun_sum": "$day.windrun.sum",
            "rms": "$day.wind.rms"
        },
        "UV": {
            "max": "$day.UV.max",
            "maxtime": "$day.UV.maxtime",
            "min": "$day.UV.min",
            "mintime": "$day.UV.mintime"
        },
        "radiation": {
            "max": "$day.radiation.max",
            "maxtime": "$day.radiation.maxtime",
            "min": "$day.radiation.min",
            "mintime": "$day.radiation.mintime"
        },
        "rain": {
            "sum": "$day.rain.sum",
            "max": "$day.rainRate.max",
            "maxtime": "$day.rainRate.maxtime"
        },
        "dayRain": "$current.dayRain"
    },
    "week": {
        "outTemp": {
            "max": "$week.outTemp.max",
            "maxtime": "$week.outTemp.maxtime",
            "avg": "$week.outTemp.avg",
            "min": "$week.outTemp.min",
            "mintime": "$week.outTemp.mintime"
        },
        "appTemp": {
            "max": "$week.appTemp.max",
            "maxtime": "$week.appTemp.maxtime",
            "min": "$week.appTemp.min",
            "mintime": "$week.appTemp.mintime"
        },
        "heatindex": {
            "max": "$week.heatindex.max",
            "maxtime": "$week.heatindex.maxtime"
        },
        "windchill": {
            "max": "$week.windchill.min",
            "maxtime": "$week.windchill.mintime"
        },
        "humidity": {
            "max": "$week.outHumidity.max",
            "maxtime": "$week.outHumidity.maxtime",
            "min": "$week.outHumidity.min",
            "mintime": "$week.outHumidity.mintime"
        },
        "dewpoint": {
            "max": "$week.dewpoint.max",
            "maxtime": "$week.dewpoint.maxtime",
            "min": "$week.dewpoint.min",
            "mintime": "$week.dewpoint.mintime"
        },
        "barometer": {
            "max": "$week.barometer.max",
            "maxtime": "$week.barometer.maxtime",
            "min": "$week.barometer.min",
            "mintime": "$week.barometer.mintime"
        },
        "wind": {
            "max": "$week.wind.max",
            "maxtime": "$week.wind.maxtime",
            "gustdir": "$week.wind.gustdir",
            "average": "$week.wind.avg",
            "vectordir": "$week.wind.vecdir",
            "vectoravg": "$week.wind.vecavg",
            "windrun_max": "$week.windrun.max",
            "windrun_maxtime": "$week.windrun.maxtime",
            "windrun_min": "$week.windrun.min",
            "windrun_mintime": "$week.windrun.mintime",
            "windrun_sum": "$week.windrun.sum",
            "rms": "$week.wind.rms"
        },
        "UV": {
            "max": "$week.UV.max",
            "maxtime": "$week.UV.maxtime",
            "min": "$week.UV.min",
            "mintime": "$week.UV.mintime"
        },
        "radiation": {
            "max": "$week.radiation.max",
            "maxtime": "$week.radiation.maxtime",
            "min": "$week.radiation.min",
            "mintime": "$week.radiation.mintime"
        },
        "rain": {
            "sum": "$week.rain.sum",
            "max": "$week.rainRate.max",
            "maxtime": "$week.rainRate.maxtime"
        },
        "weekRain": "$current.weekRain"
    },
    "month": {
        "outTemp": {
            "max": "$month.outTemp.max",
            "maxtime": "$month.outTemp.maxtime",
            "avg": "$month.outTemp.avg",
            "min": "$month.outTemp.min",
            "mintime": "$month.outTemp.mintime"
        },
        "appTemp": {
            "max": "$month.appTemp.max",
            "maxtime": "$month.appTemp.maxtime",
            "min": "$month.appTemp.min",
            "mintime": "$month.appTemp.mintime"
        },
        "heatindex": {
            "max": "$month.heatindex.max",
            "maxtime": "$month.heatindex.maxtime"
        },
        "windchill": {
            "max": "$month.windchill.min",
            "maxtime": "$month.windchill.mintime"
        },
        "humidity": {
            "max": "$month.outHumidity.max",
            "maxtime": "$month.outHumidity.maxtime",
            "min": "$month.outHumidity.min",
            "mintime": "$month.outHumidity.mintime"
        },
        "dewpoint": {
            "max": "$month.dewpoint.max",
            "maxtime": "$month.dewpoint.maxtime",
            "min": "$month.dewpoint.min",
            "mintime": "$month.dewpoint.mintime"
        },
        "barometer": {
            "max": "$month.barometer.max",
            "maxtime": "$month.barometer.maxtime",
            "min": "$month.barometer.min",
            "mintime": "$month.barometer.mintime"
        },
        "wind": {
            "max": "$month.wind.max",
            "maxtime": "$month.wind.maxtime",
            "gustdir": "$month.wind.gustdir",
            "average": "$month.wind.avg",
            "vectordir": "$month.wind.vecdir",
            "vectoravg": "$month.wind.vecavg",
            "windrun_max": "$month.windrun.max",
            "windrun_maxtime": "$month.windrun.maxtime",
            "windrun_min": "$month.windrun.min",
            "windrun_mintime": "$month.windrun.mintime",
            "windrun_sum": "$month.windrun.sum",
            "rms": "$month.wind.rms"
        },
        "UV": {
            "max": "$month.UV.max",
            "maxtime": "$month.UV.maxtime",
            "min": "$month.UV.min",
            "mintime": "$month.UV.mintime"
        },
        "radiation": {
            "max": "$month.radiation.max",
            "maxtime": "$month.radiation.maxtime",
            "min": "$month.radiation.min",
            "mintime": "$month.radiation.mintime"
        },
        "rain": {
            "sum": "$month.rain.sum",
            "max": "$month.rainRate.max",
            "maxtime": "$month.rainRate.maxtime"
        },
        "monthRain": "$current.monthRain"
    },
    "year": {
        "outTemp": {
            "max": "$year.outTemp.max",
            "maxtime": "$year.outTemp.maxtime",
            "avg": "$year.outTemp.avg",
            "min": "$year.outTemp.min",
            "mintime": "$year.outTemp.mintime"
        },
        "appTemp": {
            "max": "$year.appTemp.max",
            "maxtime": "$year.appTemp.maxtime",
            "min": "$year.appTemp.min",
            "mintime": "$year.appTemp.mintime"
        },
        "heatindex": {
            "max": "$year.heatindex.max",
            "maxtime": "$year.heatindex.maxtime"
        },
        "windchill": {
            "max": "$year.windchill.min",
            "maxtime": "$year.windchill.mintime"
        },
        "humidity": {
            "max": "$year.outHumidity.max",
            "maxtime": "$year.outHumidity.maxtime",
            "min": "$year.outHumidity.min",
            "mintime": "$year.outHumidity.mintime"
        },
        "dewpoint": {
            "max": "$year.dewpoint.max",
            "maxtime": "$year.dewpoint.maxtime",
            "min": "$year.dewpoint.min",
            "mintime": "$year.dewpoint.mintime"
        },
        "barometer": {
            "max": "$year.barometer.max",
            "maxtime": "$year.barometer.maxtime",
            "min": "$year.barometer.min",
            "mintime": "$year.barometer.mintime"
        },
        "wind": {
            "max": "$year.wind.max",
            "maxtime": "$year.wind.maxtime",
            "gustdir": "$year.wind.gustdir",
            "average": "$year.wind.avg",
            "vectordir": "$year.wind.vecdir",
            "vectoravg": "$year.wind.vecavg",
            "windrun_max": "$year.windrun.max",
            "windrun_maxtime": "$year.windrun.maxtime",
            "windrun_min": "$year.windrun.min",
            "windrun_mintime": "$year.windrun.mintime",
            "windrun_sum": "$year.windrun.sum",
            "rms": "$year.wind.rms"
        },
        "UV": {
            "max": "$year.UV.max",
            "maxtime": "$year.UV.maxtime",
            "min": "$year.UV.min",
            "mintime": "$year.UV.mintime"
        },
        "radiation": {
            "max": "$year.radiation.max",
            "maxtime": "$year.radiation.maxtime",
            "min": "$year.radiation.min",
            "mintime": "$year.radiation.mintime"
        },
        "rain": {
            "sum": "$year.rain.sum",
            "max": "$year.rainRate.max",
            "maxtime": "$year.rainRate.maxtime"
        },
        "yearRain": "$current.yearRain"
    },
    "almanac": {
        "sunrise": "$almanac.sunrise",
        "sunrise_epoch": "$almanac.sunrise.raw",
        #if $almanac.sunrise.raw is not None
        "sunrise_hour": "#echo datetime.datetime.fromtimestamp($almanac.sunrise.raw).strftime('%H')#",
        "sunrise_minute": "#echo datetime.datetime.fromtimestamp($almanac.sunrise.raw).strftime('%M')#",
        #else 
        "sunrise_hour": "0",
        "sunrise_minute": "0",
        #end if
        "sunset": "$almanac.sunset",
        "sunset_epoch": "$almanac.sunset.raw",
        #if $almanac.sunset.raw is not None
        "sunset_hour": "#echo datetime.datetime.fromtimestamp($almanac.sunset.raw).strftime('%H')#",
        "sunset_minute": "#echo datetime.datetime.fromtimestamp($almanac.sunset.raw).strftime('%M')#",
        #else
        "sunset_hour": "0",
        "sunset_minute": "0",
        #end if
        #if $almanac.hasExtras
        "almanac_extras_modal_html": "<div id='celestial_widget' class='widget'> <div class='widget_contents'> <div id='celestial_details'> <div class='celestial_body'> <table class='celestial'> <tr><th>&#9728; $obs.label.sun</th><th></th></tr> <tr> <td class='label'>$obs.label.start_civil_twilight</td> <td class='data'>$almanac(horizon=-6).sun(use_center=1).rise</td> </tr> <tr> <td class='label'>$obs.label.rise</td> <td class='data'>$almanac.sun.rise.format(None_string=$sun_None)</td> </tr> <tr> <td class='label'>$obs.label.transit</td> <td class='data'>$almanac.sun.transit</td> </tr> <tr> <td class='label'>$obs.label.set</td> <td class='data'>$almanac.sun.set.format(None_string=$sun_None)</td> </tr> <tr> <td class='label'>$obs.label.end_civil_twilight</td> <td class='data'>$almanac(horizon=-6).sun(use_center=1).set</td> </tr> <tr> <td class='label'>$obs.label.azimuth</td> <td class='data'>$sun_azimuth</td> </tr> <tr> <td class='label'>$obs.label.altitude</td> <td class='data'>$sun_altitude</td> </tr> <tr> <td class='label'>$obs.label.right_ascension</td> <td class='data'>$sun_ra</td> </tr> <tr> <td class='label'>$obs.label.declination</td> <td class='data'>$sun_dec</td> </tr>#slurp
        #if $almanac.next_equinox.raw < $almanac.next_solstice.raw
        ## The equinox is before the solstice. Display them in order.
        <tr><td class='label'>$obs.label.equinox</td><td class='data'>$almanac.next_equinox</td></tr><tr><td class='label'>$obs.label.solstice</td><td class='data'>$almanac.next_solstice</td></tr>#slurp
        #else
        ## The solstice is before the equinox. Display them in order.
        <tr><td class='label'>$obs.label.solstice</td><td class='data'>$almanac.next_solstice</td></tr><tr><td class='label'>$obs.label.equinox</td><td class='data'>$almanac.next_equinox</td></tr>#slurp
        #end if
        <tr> <td class='label'>$obs.label.total_daylight</td> <td class='data'>$daylight_str</td> </tr> </table> </div> <div class='celestial_body'> <table class='celestial'> <tr><th>&#9789; $obs.label.moon</th><th></th></tr> <tr><td class='label'>&nbsp;</td><td class='data'>&nbsp;</td></tr> <tr> <td class='label'>$obs.label.rise</td> <td class='data'>$almanac.moon.rise</td> </tr> <tr> <td class='label'>$obs.label.transit</td> <td class='data'>$almanac.moon.transit</td> </tr> <tr> <td class='label'>$obs.label.set</td> <td class='data'>$almanac.moon.set</td> </tr> <tr><td class='label'>&nbsp;</td><td class='data'>&nbsp;</td></tr> <tr> <td class='label'>$obs.label.azimuth</td> <td class='data'>$moon_azimuth</td> </tr> <tr> <td class='label'>$obs.label.altitude</td> <td class='data'>$moon_altitude</td> </tr> <tr> <td class='label'>$obs.label.right_ascension</td> <td class='data'>$moon_ra</td> </tr> <tr> <td class='label'>$obs.label.declination</td> <td class='data'>$moon_dec</td> </tr>#slurp
        #if $almanac.next_full_moon.raw < $almanac.next_new_moon.raw
        <tr> <td class='label'>$obs.label.full_moon</td> <td class='data'>$almanac.next_full_moon</td> </tr> <tr> <td class='label'>$obs.label.new_moon</td> <td class='data'>$almanac.next_new_moon</td> </tr>#slurp
        #else
        <tr> <td class='label'>$obs.label.new_moon</td> <td class='data'>$almanac.next_new_moon</td> </tr> <tr> <td class='label'>$obs.label.full_moon</td> <td class='data'>$almanac.next_full_moon</td> </tr>#slurp
        #end if
        <tr> <td class='label'>$obs.label.phase</td> <td class='data'>$almanac.moon_phase<br/> $almanac.moon_fullness% $obs.label.full</td> </tr> </table> </div> </div> </div> </div> <div class='clear'></div><div class='almanac_last_updated'></div>",
        #end if
        "moon": {
            "moon_fullness": "$almanac.moon_fullness",
            "moon_phase": "$almanac.moon_phase",
            "moon_index": "$almanac.moon_index",
            "moon_rise": "$almanac.moon.rise",
            "moon_rise_epoch": "$almanac.moon.rise.raw",
            "moon_set": "$almanac.moon.set",
            "moon_set_epoch": "$almanac.moon.set.raw"
        }
    },
    #if $Extras.has_key("value_dependent_properties_enabled") and $Extras.value_dependent_properties_enabled == '1'
    "value_dependent_properties": $value_dependent_properties_json,
    #else
    "value_dependent_properties": {},
    #end if
    "aqilevel": {
        "1": {
            "text": "$gettext('very good')",
            "ttt": "$pgettext('ttt_aqi', 'very good')",
            "color": "var(--aqi-very-good)"
        },
        "2": {
            "text": "$gettext('good')",
            "ttt": "$pgettext('ttt_aqi', 'good')",
            "color": "var(--aqi-good)"
        },
        "3": {
            "text": "$gettext('moderate')",
            "ttt": "$pgettext('ttt_aqi', 'moderate')",
            "color": "var(--aqi-moderate)"
        },
        "4": {
            "text": "$gettext('poor')",
            "ttt": "$pgettext('ttt_aqi', 'poor')",
            "color": "var(--aqi-poor)"
        },
        "5": {
            "text": "$gettext('very poor')",
            "ttt": "$pgettext('ttt_aqi', 'very poor')",
            "color": "var(--aqi-very-poor)"
        },
        "unknown": {
            "text": "$gettext('unknown')",
            "ttt": "$gettext('unknown')",
            "color": "inherit"
        }
    },
    #if $Extras.has_key("value_dependent_properties_enabled") and $Extras.value_dependent_properties_enabled == '1'
    "roomclimate_extension_config": $roomclimate_extension_config_json,
    #else
    "roomclimate_extension_config": {},
    #end if
    "roomclimate": {
        "temperature": {
            "-2": {
                "text": "$gettext('very cold')",
                "ttt": "$pgettext('ttt_roomclimate_temperature', 'very cold')",
                "color": "var(--indoor-temp-very-cold)"
            },
            "-1": {
                "text": "$gettext('cold')",
                "ttt": "$pgettext('ttt_roomclimate_temperature', 'cold')",
                "color": "var(--indoor-temp-cold)"
            },
            "0": {
                "text": "$gettext('optimal')",
                "ttt": "$pgettext('ttt_roomclimate_temperature', 'optimal')",
                "color": "var(--indoor-temp-optimal)"
            },
            "1": {
                "text": "$gettext('warm')",
                "ttt": "$pgettext('ttt_roomclimate_temperature', 'warm')",
                "color": "var(--indoor-temp-warm)"
            },
            "2": {
                "text": "$gettext('very warm')",
                "ttt": "$pgettext('ttt_roomclimate_temperature', 'very warm')",
                "color": "var(--indoor-temp-very-warm)"
            }
        },
        "humidity": {
            "-2": {
                "text": "$gettext('very dry')",
                "ttt": "$pgettext('ttt_roomclimate_humidity', 'very dry')",
                "color": "var(--indoor-humidity-very-dry)"
            },
            "-1": {
                "text": "$gettext('dry')",
                "ttt": "$pgettext('ttt_roomclimate_humidity', 'dry')",
                "color": "var(--indoor-humidity-dry)"
            },
            "0": {
                "text": "$gettext('optimal')",
                "ttt": "$pgettext('ttt_roomclimate_humidity', 'optimal')",
                "color": "var(--indoor-humidity-optimal"
            },
            "1": {
                "text": "$gettext('moist')",
                "ttt": "$pgettext('ttt_roomclimate_humidity', 'moist')",
                "color": "var(--indoor-humidity-moist)"
            },
            "2": {
                "text": "$gettext('very moist')",
                "ttt": "$pgettext('ttt_roomclimate_humidity', 'very moist')",
                "color": "var(--indoor-humidity-very-moist)"
            }
        },
        "room": {
            "0": {
                "text": "$gettext('optimal')",
                "ttt": "$pgettext('ttt_roomclimate_room', 'optimal')",
                "color": "var(--indoor-room-optimal)"
            },
            "1": {
                "text": "$gettext('action required')",
                "ttt": "$pgettext('ttt_roomclimate_room', 'action required')",
                "color": "var(--indoor-room-action)"
            }
        },
        "unknown": {
            "text": "$gettext('unknown')",
            "ttt": "$gettext('unknown')",
            "color": "inherit"
        }
    },
    "batterylevel": {
        "wh31": {
            "0": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            }
        },
        "wh57": {
            "0": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            },
            "1": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            },
            "2": {
                "text": "$gettext('sufficient')",
                "ttt": "$pgettext('ttt_batterylevel', 'sufficient')",
                "color": "var(--battery-half)",
                "symbol": "bi bi-battery-half"
            },
            "3": {
                "text": "$gettext('sufficient')",
                "ttt": "$pgettext('ttt_batterylevel', 'sufficient')",
                "color": "var(--battery-half)",
                "symbol": "bi bi-battery-half"
            },
            "4": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "5": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            }
        },
        "wh65": {
            "0": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            }
        },
        "unknown": {
            "text": "$gettext('unknown')",
            "ttt": "$gettext('unknown')",
            "color": "inherit",
            "symbol": "bi bi-question"
        }
    },
    "voltagelevel": {
        "solar": {
            "4": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "3": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            }
        },
        "wh51": {
            "1.9": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1.8": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1.7": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1.6": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1.5": {
                "text": "$gettext('ok')",
                "ttt": "$pgettext('ttt_batterylevel', 'ok')",
                "color": "var(--battery-full)",
                "symbol": "bi bi-battery-full"
            },
            "1.4": {
                "text": "$gettext('sufficient')",
                "ttt": "$pgettext('ttt_batterylevel', 'sufficient')",
                "color": "var(--battery-half)",
                "symbol": "bi bi-battery-half"
            },
            "1.3": {
                "text": "$gettext('sufficient')",
                "ttt": "$pgettext('ttt_batterylevel', 'sufficient')",
                "color": "var(--battery-half)",
                "symbol": "bi bi-battery-half"
            },
            "1.2": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            },
            "1.1": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            },
            "1.0": {
                "text": "$gettext('low')",
                "ttt": "$pgettext('ttt_batterylevel', 'low')",
                "color": "var(--battery-low)",
                "symbol": "bi bi-battery"
            }
        },
        "unknown": {
            "text": "$gettext('unknown')",
            "ttt": "$gettext('unknown')",
            "color": "inherit",
            "symbol": "bi bi-question"
        }
    },
    "signallevel": {
        "0": {
            "text": "$gettext('very poor')",
            "ttt": "$pgettext('ttt_signallevel', 'very poor')",
            "color": "var(--signal-very-poor)",
            "symbol": "bi bi-reception-0"
        },
        "1": {
            "text": "$gettext('poor')",
            "ttt": "$pgettext('ttt_signallevel', 'poor')",
            "color": "var(--signal-poor)",
            "symbol": "bi bi-reception-1"
        },
        "2": {
            "text": "$gettext('sufficient')",
            "ttt": "$pgettext('ttt_signallevel', 'sufficient')",
            "color": "var(--signal-sufficient)",
            "symbol": "bi bi-reception-2"
        },
        "3": {
            "text": "$gettext('good')",
            "ttt": "$pgettext('ttt_signallevel', 'good')",
            "color": "var(--signal-good)",
            "symbol": "bi bi-reception-3"
        },
        "4": {
            "text": "$gettext('very good')",
            "ttt": "$pgettext('ttt_signallevel', 'very good')",
            "color": "var(--signal-very-good)",
            "symbol": "bi bi-reception-4"
        },
        "unknown": {
            "text": "$gettext('unknown')",
            "ttt": "$gettext('unknown')",
            "color": "inherit",
            "symbol": "bi bi-question"
        }
    },
    "switchlevel": {
        "0": {
            "text": "$gettext('off')",
            "ttt": "$pgettext('ttt_switchlevel', 'off')",
            "color_ok": "var(--ok-off-color)",
            "color_nok": "var(--ok-on-color)"
        },
        "1": {
            "text": "$gettext('on')",
            "ttt": "$pgettext('ttt_switchevel', 'on')",
            "color_ok": "var(--ok-on-color)",
            "color_nok": "var(--ok-on-color)"
        },
        "unknown": {
            "text": "$gettext('unknown')",
            "ttt": "$gettext('unknown')",
            "color": "inherit"
        }
    },
    "trend": {
        "pressuretrend": {
            "symbol-up": "fa fa-fw fa-long-arrow-up",
            "symbol-right": "fa fa-fw fa-long-arrow-right",
            "symbol-down": "fa fa-fw fa-long-arrow-down",
            "-4": {
                "text": "$gettext('falling very rapidly')",
                "ttt": "$pgettext('ttt_pressuretrend', 'falling very rapidly')"
            },
            "-3": {
                "text": "$gettext('falling quickly')",
                "ttt": "$pgettext('ttt_pressuretrend', 'falling quickly')"
            },
            "-2": {
                "text": "$gettext('falling')",
                "ttt": "$pgettext('ttt_pressuretrend', 'falling')"
            },
            "-1": {
                "text": "$gettext('falling slowly')",
                "ttt": "$pgettext('ttt_pressuretrend', 'falling slowly')"
            },
            "0": {
                "text": "$gettext('steady')",
                "ttt": "$pgettext('ttt_pressuretrend', 'steady')"
            },
            "1": {
                "text": "$gettext('rising slowly')",
                "ttt": "$pgettext('ttt_pressuretrend', 'rising slowly')"
            },
            "2": {
                "text": "$gettext('rising')",
                "ttt": "$pgettext('ttt_pressuretrend', 'rising')"
            },
            "3": {
                "text": "$gettext('rising quickly')",
                "ttt": "$pgettext('ttt_pressuretrend', 'rising quickly')"
            },
            "4": {
                "text": "$gettext('rising very rapidly')",
                "ttt": "$pgettext('ttt_pressuretrend', 'rising very rapidly')"
            },
            "unknown": {
                "text": "$gettext('unknown')",
                "ttt": "$gettext('unknown')"
            }
        },
        "outTemp": {
            "trend": "$trend.outTemp",
            "raw": "$trend.outTemp.raw",
            "formatted": "$trend.outTemp.formatted"
        },
        "barometer": {
            "trend": "$trend.barometer",
            "raw": "$trend.barometer.raw",
            "formatted": "$trend.barometer.formatted"
        },
        "solar_barometer": {
            "trend": "$trend.solar_barometer",
            "raw": "$trend.solar_barometer.raw",
            "formatted": "$trend.solar_barometer.formatted"
        },
        "asky_box_barometer": {
            "trend": "$trend.asky_box_barometer",
            "raw": "$trend.asky_box_barometer.raw",
            "formatted": "$trend.asky_box_barometer.formatted"
        }
    }
}