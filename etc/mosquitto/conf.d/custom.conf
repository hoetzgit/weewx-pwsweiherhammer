#If true, connection, subscription and message data will be written
#to the disk in mosquitto.db at the location dictated by persistence_location.
#When mosquitto is restarted, it will reload the information stored in
#mosquitto.db. The data will be written to disk when mosquitto closes and
#also at periodic intervals as defined by autosave_interval. Writing of the
#persistence database may also be forced by sending mosquitto the SIGUSR1 signal.
#If false, the data will be stored in memory only. Defaults to false.
#Reloaded on reload signal.
persistence true

#The path where the persistence database should be stored. Must end in a
#trailing slash. If not given, then the current directory is used.
#Reloaded on reload signal.
#persistence_location /Daten/mosquitto/
persistence_location /var/lib/mosquitto/

#This option allows persistent clients (those with clean session set to false)
#to be removed if they do not reconnect within a certain time frame. This
#is a non-standard option. As far as the MQTT spec is concerned, persistent clients persist forever.
#Badly designed clients may set clean session to false whilst using a randomly generated client id.
#This leads to persistent clients that will never reconnect. This option allows these clients to be removed.
persistent_client_expiration 2m

#The number of seconds that mosquitto will wait between each time it
#saves the in-memory database to disk. If set to 0, the in-memory
#database will only be saved when mosquitto exits or when receiving
#the SIGUSR1 signal. Note that this setting only has an effect
#if persistence is enabled. Defaults to 1800 seconds (30 minutes).
#Reloaded on reload signal.
autosave_interval seconds 30

#If true, mosquitto will count the number of subscription changes,
#retained messages received and queued messages and if the total
#exceeds autosave_interval then the in-memory database will be saved
#to disk. If false, mosquitto will save the in-memory database to
#disk by treating autosave_interval as a time in seconds.
#Reloaded on reload signal.
autosave_on_changes true

#Set to true to queue messages with QoS 0 when a persistent client is
#disconnected. These messages are included in the limit imposed by
#max_queued_messages. Defaults to false.
#Note that the MQTT v3.1.1 spec states that only QoS 1 and 2 messages
#should be saved in this situation so this is a non-standard option.
#Reloaded on reload signal.
queue_qos0_messages true

#Boolean value that determines whether clients that connect without providing a
#username are allowed to connect. If set to false then another means of connection
#should be created to control authenticated client access. Defaults to true.
allow_anonymous true
#user and acl
#password_file /etc/mosquitto/pwfile.allsky
#acl_file /etc/mosquitto/aclfile.ott24

#mqtt and websockets
listener 1883
protocol mqtt

listener 9001
protocol websockets
